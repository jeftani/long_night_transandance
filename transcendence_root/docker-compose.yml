version: '3.8'

services:
  web:
    build: ./app
    volumes:
      - ./app/pingpong:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy  # This ensures db is really ready
    environment:
      - DATABASE_URL=postgres://smbarki:saadmbarki@db:5432/sabdark

  db:
    container_name: db
    image: postgres:13
    environment:
      - POSTGRES_DB=sabdark
      - POSTGRES_USER=smbarki
      - POSTGRES_PASSWORD=saadmbarki
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./app/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U smbarki -d sabdark"]
      interval: 5s
      timeout: 5s
      retries: 5

  logstash:
    image: logstash:7.17.13
    volumes:
      - ./elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:7.17.13
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  kibana:
    image: kibana:7.17.13
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  nginx:
    build: './nginx'
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf
      - ./app/frontend/Front-Files:/usr/share/nginx/html
    depends_on:
      - web

  redis:
    image: "redis:latest"
    ports:
      - "6380:6379"  # Expose Redis on port 6380 on your local machine  

volumes:
  postgres_data:
